
'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}
var data=void 0;var reviews=void 0;var DBHelper=function(){function DBHelper(){_classCallCheck(this,DBHelper);}
_createClass(DBHelper,null,[{key:'fetchReviews',value:function fetchReviews(id){return new Promise(function(resolve,reject){var reviews=DBHelper.reviews;if(reviews===undefined){fetch('http://localhost:1337/reviews/?restaurant_id='+id).then(function(response){return response.json();}).then(function(data){return resolve(data);});}});}},{key:'fetchRestaurants',value:function fetchRestaurants(){return new Promise(function(resolve,reject){var restaurants=DBHelper.data;if(restaurants===undefined){fetch(DBHelper.DATABASE_URL).then(function(response){return response.json();}).then(function(data){restaurants=data;resolve(restaurants);}).catch(function(error){console.log('Request failed. Error: '+error);reject(error);});}else{resolve(restaurants);}});}},{key:'initializeDB',value:function initializeDB(){var dbPromise=idb.open('restaurants',1,function(upgradeDb){if(!upgradeDb.objectStoreNames.contains('restaurants')){upgradeDb.createObjectStore('restaurants',{keyPath:'id'});upgradeDb.createObjectStore('reviews',{keyPath:'id'});upgradeDb.createObjectStore('offline_reviews',{keyPath:'id'});upgradeDb.createObjectStore('offline_favorite',{keyPath:'id'});}});return dbPromise;}},{key:'setFavorite',value:function setFavorite(id,isFavorite){if(navigator.onLine){fetch(DBHelper.DATABASE_URL+'/'+id+'/?is_favorite='+isFavorite,{method:'PUT'}).then(function(){fetch(DBHelper.DATABASE_URL+'/'+id+'/');});}else{var fav={id:id,is_favorite:isFavorite};DBHelper.initializeDB().then(function(db){var tx=db.transaction('offline_favorite','readwrite');var objectStore=tx.objectStore('offline_favorite');objectStore.openCursor(fav.id).then(function(cursor){if(cursor===undefined){objectStore.add(fav);}else{cursor.update(fav);}});});}
DBHelper.initializeDB().then(function(db){var tx=db.transaction('restaurants','readwrite');var objectStore=tx.objectStore('restaurants');return objectStore.openCursor(id);}).then(function(cursor){cursor.update(self.restaurant);window.cursor=cursor;});}},{key:'addReview',value:function addReview(restaurant_id,name,rating,comments){return new Promise(function(resolve,reject){var review={restaurant_id:restaurant_id,name:name,rating:rating,comments:comments};if(navigator.onLine){DBHelper.fetchReview(review).then(function(response){response.json().then(function(data){DBHelper.putReviewToIndexedDb(data);resolve(data);});}).catch(function(error){console.log(error);reject(error);});}else{DBHelper.addReviewToIndexedDb(review);}});}},{key:'fetchReview',value:function fetchReview(review){return new Promise(function(resolve){fetch('http://localhost:1337/reviews/',{method:'POST',body:JSON.stringify(review)}).then(function(response){return resolve(response);});});}},{key:'putReviewToIndexedDb',value:function putReviewToIndexedDb(review){review.type='review';console.log(review);DBHelper.initializeDB().then(function(db){var tx=db.transaction('reviews','readwrite');var objectStore=tx.objectStore('reviews');objectStore.put(review);});}},{key:'addReviewToIndexedDb',value:function addReviewToIndexedDb(review){review.type='review';review.id=Date.now();DBHelper.initializeDB().then(function(db){var tx=db.transaction('offline_reviews','readwrite');var objectStore=tx.objectStore('offline_reviews');objectStore.add(review);});}},{key:'fetchRestaurantById',value:function fetchRestaurantById(id){return new Promise(function(resolve,reject){DBHelper.fetchRestaurants().then(function(restaurants){var restaurant=restaurants.find(function(r){return r.id==id;});if(restaurant){DBHelper.fetchReviews(id).then(function(reviews){restaurant.reviews=reviews;resolve(restaurant);});}else{reject('Restaurant does not exist');}}).catch(function(error){console.log(error);});});}},{key:'fetchRestaurantByCuisine',value:function fetchRestaurantByCuisine(cuisine,callback){return new Promise(function(resolve,reject){DBHelper.fetchRestaurants().then(function(restaurants){var results=restaurants.filter(function(r){return r.cuisine_type==cuisine;});resolve(results);}).catch(function(error){console.log(error);});});}},{key:'fetchRestaurantByNeighborhood',value:function fetchRestaurantByNeighborhood(neighborhood,callback){DBHelper.fetchRestaurants().then(function(restaurants){var results=restaurants.filter(function(r){return r.neighborhood==neighborhood;});return results;}).catch(function(error){console.log(error);});}},{key:'fetchRestaurantByCuisineAndNeighborhood',value:function fetchRestaurantByCuisineAndNeighborhood(cuisine,neighborhood,callback){DBHelper.fetchRestaurants().then(function(restaurants){var results=restaurants;if(cuisine!='all'){results=results.filter(function(r){return r.cuisine_type==cuisine;});}
if(neighborhood!='all'){results=results.filter(function(r){return r.neighborhood==neighborhood;});}
callback(null,results);}).catch(function(error){console.log(error);});}},{key:'fetchNeighborhoods',value:function fetchNeighborhoods(callback){DBHelper.fetchRestaurants().then(function(restaurants){var neighborhoods=restaurants.map(function(v,i){return restaurants[i].neighborhood;});var uniqueNeighborhoods=neighborhoods.filter(function(v,i){return neighborhoods.indexOf(v)==i;});callback(null,uniqueNeighborhoods);}).catch(function(error){console.log(error);});}},{key:'fetchCuisines',value:function fetchCuisines(callback){DBHelper.fetchRestaurants().then(function(restaurants){var cuisines=restaurants.map(function(v,i){return restaurants[i].cuisine_type;});var uniqueCuisines=cuisines.filter(function(v,i){return cuisines.indexOf(v)==i;});callback(null,uniqueCuisines);}).catch(function(error){console.log(error);});}},{key:'urlForRestaurant',value:function urlForRestaurant(restaurant){return'./restaurant.html?id='+restaurant.id;}},{key:'imageUrlForRestaurant',value:function imageUrlForRestaurant(restaurant){var small=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return restaurant.photograph?'dist/img/'+restaurant.photograph+small+'.jpeg':'dist/img/'+restaurant.id+small+'.jpeg';}},{key:'mapMarkerForRestaurant',value:function mapMarkerForRestaurant(restaurant,map){var marker=new google.maps.Marker({position:restaurant.latlng,title:restaurant.name,url:DBHelper.urlForRestaurant(restaurant),map:map,animation:google.maps.Animation.DROP});return marker;}},{key:'DATABASE_URL',get:function get(){var port=1337;return'http://localhost:'+port+'/restaurants';}}]);return DBHelper;}();;